# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- masterstages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    variables:
       tags: $(Build.BuildId)

    steps:

    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        buildContext: '$(System.DefaultWorkingDirectory)'
        repository: '$(AWS_ECR_REPOSITORY_URI)'
        tags: |
          $(Build.BuildId)
          latest


    - task: CopyFiles@2
      inputs:
        Contents: 'Deploy/deployment.yaml'
        TargetFolder: '$(build.artifactstagingdirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
          
    - task: ECRPushImage@1
      inputs:
        awsCredentials: '$(AWS_CREDENTIALS)'
        regionName: '$(AWS_REGION)'
        imageSource: 'imagename'
        sourceImageName: '$(AWS_ECR_REPOSITORY_URI)'
        sourceImageTag: '$(Build.BuildId)'
        repositoryName: '$(AWS_ECR_REPOSITORY_NAME)'
        pushTag: '$(Build.BuildId)'
    - task: ECRPushImage@1
      inputs:
        awsCredentials: '$(AWS_CREDENTIALS)'
        regionName: '$(AWS_REGION)'
        imageSource: 'imagename'
        sourceImageName: '$(AWS_ECR_REPOSITORY_URI)'
        sourceImageTag: '$(Build.BuildId)'
        repositoryName: '$(AWS_ECR_REPOSITORY_NAME)'
        pushTag: 'latest'
        


pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
